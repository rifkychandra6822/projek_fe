steps:
  # Get environment variables from Cloud Storage
  - name: "gcr.io/cloud-builders/gsutil"
    args: ["cp", "${_ENV}", ".env"]

  # Install backend dependencies
  - name: node
    entrypoint: npm
    args: ["install"]
    dir: "."

  # Run backend tests (if any)
  - name: node
    entrypoint: npm
    args: ["test", "--if-present"]
    dir: "."

  # Build backend Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/pro-pokemon-backend",
        ".",
      ]

  # Push backend image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/pro-pokemon-backend"]

  # Install and build frontend
  - name: node
    entrypoint: npm
    args: ["install"]
    dir: "public"
  
  - name: node
    entrypoint: npm
    args: ["run", "build"]
    dir: "public"

  # Deploy backend to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "pro-pokemon-backend",
        "--image",
        "gcr.io/$PROJECT_ID/pro-pokemon-backend",
        "--platform",
        "managed",
        "--region",
        "asia-southeast2",
        "--allow-unauthenticated",
        "--memory",
        "512Mi",
        "--cpu",
        "1",
        "--port",
        "3000",
        "--min-instances",
        "1",
        "--max-instances",
        "10",
        "--set-env-vars",
        "FRONTEND_URL=https://pro-pokemon-frontend-dot-${PROJECT_ID}.appspot.com"
      ]

  # Deploy frontend to App Engine
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      [
        "-c",
        "cd public && gcloud config set app/cloud_build_timeout 1600 && gcloud app deploy app.yaml --version=v1"
      ]

timeout: "1800s"
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _ENV: "gs://your-bucket/pro-pokemon/.env.yaml"  # Update this with your actual Cloud Storage path

artifacts:
  objects:
    location: "gs://${PROJECT_ID}_cloudbuild/logs"
    paths: ["cloudbuild-logs/*"]